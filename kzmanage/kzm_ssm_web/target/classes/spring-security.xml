<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">
    <security:global-method-security pre-post-annotations="enabled" jsr250-annotations="enabled" secured-annotations="enabled"></security:global-method-security>

    <!--配置不拦截的资源-->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <security:http pattern="/failer.jsp" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>

    <!--配置具体的规则
     auto-config="true" 不用自己编写登录的页面，框架提供默认的登录页面，
    use-expression="false" 是否使用spel表达式-->
    <security:http auto-config="true" use-expressions="true">
        <!--配置具体的拦截规则，pattern="请求路径的规则",access="访问系统的人，必须有ROLE_USER的角色"-->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"></security:intercept-url>
        <!--定义跳转的具体的页面-->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
                authentication-success-forward-url="/pages/main.jsp"
        ></security:form-login>
        <!--关闭跨域请求-->
        <security:csrf disabled="true"></security:csrf>
        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout"
                         logout-success-url="/login.jsp"></security:logout>
    </security:http>
    <!--使用数据库中的用户名和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置加密类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

</beans>