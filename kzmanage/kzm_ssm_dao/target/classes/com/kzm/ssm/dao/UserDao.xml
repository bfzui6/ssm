<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzm.ssm.dao.UserDao">
    <resultMap id="userMapBase" type="com.kzm.ssm.domain.UserInfo">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="email" column="email"></result>
        <result property="password" column="password"></result>
        <result property="phoneNum" column="phoneNum"></result>
        <result property="status" column="status"></result>
    </resultMap>
    <resultMap id="userMapRoles" type="com.kzm.ssm.domain.UserInfo" extends="userMapBase">
        <collection property="roles" ofType="com.kzm.ssm.domain.Role">
            <result property="roleName" column="roleName"></result>
            <result property="roleDesc" column="roleDesc"></result>
            <collection property="permissions" ofType="com.kzm.ssm.domain.Permission">
                <result property="permissionName" column="permissionName"></result>
                <result property="url" column="url"></result>
            </collection>
        </collection>
    </resultMap>
    <resultMap id="userMapRolesByName" type="com.kzm.ssm.domain.UserInfo" extends="userMapBase">
        <collection property="roles" ofType="com.kzm.ssm.domain.Role">
            <id property="id" column="roleId"></id>
            <result property="roleName" column="roleName"></result>
            <result property="roleDesc" column="roleDesc"></result>
        </collection>
    </resultMap>
    <select id="findAll" resultMap="userMapBase">
        select
        id,
        username,
        email,
        phoneNum,
        status
        from users
    </select>
    <select id="findById" resultMap="userMapRoles">
        select
        u.id,
        u.username,
        r.roleName,
        r.roleDesc,
        p.permissionName ,
        p.url
        from users u
        inner join users_role ur on u.id=ur.userId
        inner join role r on r.id=ur.roleId
        inner join role_permission rp on rp.roleId=r.id
        inner join permission p on p.id=rp.permissionId
        where u.id =#{id}
    </select>
    <select id="findByUserName" resultMap="userMapRolesByName">
        select
        u.id,
        u.status,
        u.email,
        u.password,
        u.phoneNum,
        u.username,
        r.id as roleId ,
        r.roleName,
        r.roleDesc
        from users u
        inner  join users_role ur on u.id=ur.userId
        inner  join role r on ur.roleId=r.id
        where u.username=#{username}
    </select>
    <insert id="saveUser" parameterType="com.kzm.ssm.domain.UserInfo">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into users(id,email,username,password,phoneNum,status)values
        (#{id},#{email},#{username},#{password},#{phoneNum},#{status})
    </insert>

    <select id="findOtherRole" resultType="com.kzm.ssm.domain.Role">
        select *
        from role
        where id not in
        (select roleId from  users_role where userId=#{id})
    </select>
    <insert id="addRoleToUser">
        insert into users_role(userId,roleId) values (#{userId},#{roleId})
    </insert>
</mapper>